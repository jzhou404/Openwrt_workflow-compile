name: Build OP-x64

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: x64.config
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
                                bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gettext gcc-multilib g++-multilib \
                                git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
                                libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libncurses-dev libpython3-dev libreadline-dev \
                                libssl-dev libtool llvm lrzsz genisoimage msmtp ninja-build p7zip p7zip-full patch pkgconf python3 \
                                python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
                                uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo apt-get autoremove --purge -y
          sudo apt-get clean
          sudo timedatectl set-timezone "$TZ"

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with: 
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
         tool-cache: true
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
         android: true
         dotnet: true
         haskell: true
         large-packages: true
         swap-storage: true

      - name: Create work directory
        run: |
          sudo mkdir -p /workdir
          sudo chown -R $USER:$USER /workdir

      - name: Git clone coolsnowwolf code
        working-directory: /workdir
        run: |
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: Patch feeds.conf
        run: |
          echo "src-git helloworld https://github.com/fw876/helloworld" >> openwrt/feeds.conf.default

      - name: Update feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a

      - name: Install feeds
        run: |
          cd openwrt
          ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

      - name: Download package
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j$(nproc)

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 V=s 2>&1 | tee build.log
          echo "status=success" >> $GITHUB_OUTPUT
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Clean up build files
        run: |
          cd openwrt
          rm -rf dl build_dir

      - name: Upload build log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build_log
          path: openwrt/build.log

      - name: Check if firmware exists
        id: check_firmware
        run: |
          if [ -d "openwrt/bin/targets" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Organize files
        id: organize
        if: steps.check_firmware.outputs.exists == 'true' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload firmware directory
        uses: actions/upload-artifact@v4
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
